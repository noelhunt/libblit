/* alloc.c */
void allocinit(void);
char *alloc(ulong nbytes);
void free(char *cp);
void allocerr(void);
char *malloc(unsigned n);
/* file.c */
File *Fileid(int id);
File *Fnew(void);
File *Fcreat(register File *f, char *s);
File *Fload(register File *f);
int Fread(register File *f, long posn, String *str, int setdate, int r);
int Fwrite(register File *f, register String *fname, register fd);
int Fwritepart(register File *f, long posn, long nbytes, register fd);
int samefile(String *f1, String *f2);
int Fclose(register File *f);
int Ffree(register File *f);
int Freset(register File *f);
int toolarge(register File *f);
int Read(char *s, int fd, char *a, int n);
int Write(char *s, int fd, char *a, ulong n);
int Fgetblock(register File *f, register n);
int makeblock(register File *f, int n);
int Fputblock(register File *f);
int splitblock(register File *f, long n);
int Fseek(register File *f, register long m);
int Finstext(register File *f, register long m, register String *s);
int Fdeltext(register File *f, register long m, register long n);
int Fsave(register File *f, register String *b, register long m, register long n);
int Forigin(register File *f, register long posn);
long Fcountnl(register File *f, register long charno);
long Fforwnl(register File *f, register long posn, register int nlines);
long Fbacknl(register File *f, register long posn, register int nlines);
long min(register long a, register long b);
long length(register File *f);
/* gcalloc.c */
char *gcalloc(register ulong nbytes, long **where);
char *gcrealloc(char *cp, register ulong nbytes);
void shiftgcarena(ulong nl);
int gcfree(char *cp);
int bcopy(register char *s1, register char *s2, register char *d, int dir);
int gcchk(void);
/* jim.c */
int main(int argc, char *argv[]);
char *jerqname(register File *cf, register char *s);
int namecompact(char *as, char *ad);
int rescue(void);
int message(void);
char *skipbl(register char *p);
int commands(register File *f);
int checkifdups(register File *f);
int writechanged(void);
char *data2(int n);
long labs(long a);
int moveto(register File *f, register long p1, register long p2);
int tellseek(register File *f);
void error(char *s, char *t);
void quit(char *s);
int ioerr(register char *s, register char *t);
int mesg(register char *s, register char *t);
int sendstr(unsigned f, int op, int posn, register char *d);
int dprintf(char *a, int b, int c, int d, int e, int f, int g);
void panic(char *s);
int boot(char *s);
int system(char *s, char *t, char *u, char *v);
int modified(File *f);
int unmodified(File *f);
/* msgs.c */
int send(unsigned f, int op, int posn, unsigned n, register char *d);
int rcv(void);
/* pattern.c */
int compile(char *s, int save);
int optimize(void);
int reerror(char *s);
int pushand(register Node *b, register Node *e);
Stack *popand(void);
int pushator(register Node *o);
int popto(register op);
int expr(void);
int startpat(char *s);
char *cclblock(void);
int advpat(void);
Node *new(int op);
int old(Node *n);
int addtolist(register List *l, register Node *n, long sp);
int execute(File *f, int c);
int fexecute(register File *f);
int bexecute(register File *f);
int newmatch(register long b, register long e);
int postcompress(void);
int killlater(List *lp, register long b);
/* string.c */
void strinit(String *p);
void strfree(String *p);
String *bldstring(char *s);
char *charstar(String *p);
void strzero(String *p);
void strdup(String *p, char *s);
void straddc(String *p, char c);
void strinsure(String *p, ulong n);
void strinsert(String *p, String *q, Posn p0);
void strdelete(String *p, Posn p1, Posn p2);
/* unix.c */
int Unix(File *f, int type, char *unixcmd, int wholefile, int display);
int refresh(register File *f);
int checkerrs(void);
File *getname(char *s);
int nextname(char *as, String *str, int *np);
int namegetc(String *s, int *np);
